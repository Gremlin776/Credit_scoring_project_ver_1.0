# Credit Scoring ML Pipeline

–ü—Ä–æ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–∏–Ω–≥–æ–≤–æ–π –º–æ–¥–µ–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–∞ (PD-–º–æ–¥–µ–ª—å).

## –û –ø—Ä–æ–µ–∫—Ç–µ

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–∫–≤–æ–∑–Ω–æ–π (end-to-end) –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –¥–ª—è:
- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ML –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
- –í–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥—Ä–∏—Ñ—Ç–∞
- –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ REST API
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ CI/CD

**–î–æ–º–µ–Ω**: –§–∏–Ω–∞–Ω—Å—ã / –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Å–∫–æ—Ä–∏–Ω–≥  
**–î–∞–Ω–Ω—ã–µ**: Default of Credit Card Clients Dataset —Å UCI Machine Learning Repository

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
credit-scoring-project/
‚îú‚îÄ‚îÄ data/ # –î–∞–Ω–Ω—ã–µ (–≤–µ—Ä—Å–∏–æ–Ω–∏—Ä—É—é—Ç—Å—è DVC)
‚îÇ ‚îú‚îÄ‚îÄ raw/ # –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
‚îÇ ‚îú‚îÄ‚îÄ processed/ # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
‚îÇ ‚îî‚îÄ‚îÄ expectations/ # –ü—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Great Expectations
‚îú‚îÄ‚îÄ notebooks/ # EDA –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã
‚îÇ ‚îî‚îÄ‚îÄ 01_eda.ipynb # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
‚îú‚îÄ‚îÄ src/ # –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
‚îÇ ‚îú‚îÄ‚îÄ data/
‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ make_dataset.py # –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ validation.py # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å Great Expectations
‚îÇ ‚îú‚îÄ‚îÄ features/
‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ build_features.py # Feature Engineering
‚îÇ ‚îú‚îÄ‚îÄ models/
‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ train.py # –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π —Å MLflow
‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ predict.py # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ pipeline.py # Sklearn pipelines
‚îÇ ‚îú‚îÄ‚îÄ api/
‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ app.py # FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚îÇ ‚îî‚îÄ‚îÄ monitoring/
‚îÇ ‚îî‚îÄ‚îÄ drift_detection.py # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥—Ä–∏—Ñ—Ç–∞
‚îú‚îÄ‚îÄ tests/ # Unit-—Ç–µ—Å—Ç—ã
‚îÇ ‚îú‚îÄ‚îÄ test_preprocessing.py
‚îÇ ‚îú‚îÄ‚îÄ test_models.py
‚îÇ ‚îî‚îÄ‚îÄ test_api.py
‚îú‚îÄ‚îÄ models/ # –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
‚îú‚îÄ‚îÄ reports/ # –û—Ç—á–µ—Ç—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏
‚îú‚îÄ‚îÄ .github/workflows/ # GitHub Actions
‚îÇ ‚îî‚îÄ‚îÄ ci-cd.yml
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ dvc.yaml # DVC pipeline
‚îú‚îÄ‚îÄ pyproject.toml # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
‚îî‚îÄ‚îÄ README.md

text

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

- Python 3.9+
- Git
- DVC
- Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. **–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è**
```bash
git clone https://github.com/your-username/credit-scoring-project
cd credit-scoring-project
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

bash
pip install -r requirements.txt
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DVC

bash
dvc init
–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö

bash
# –î–æ–±–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ data/raw/ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ DVC remote storage
üöÄ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
bash
# –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ DVC –ø–∞–π–ø–ª–∞–π–Ω–∞
dvc repro

# –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
dvc metrics show
–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
bash
# –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å MLflow
python src/models/train.py

# –ü—Ä–æ—Å–º–æ—Ç—Ä —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –≤ MLflow UI
mlflow ui
–ó–∞–ø—É—Å–∫ API
bash
# –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
uvicorn src.api.app:app --host 0.0.0.0 --port 8000 --reload

# –ò–ª–∏ —á–µ—Ä–µ–∑ Docker
docker build -t credit-scoring-api .
docker run -p 8000:8000 credit-scoring-api
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
bash
# Health check
curl http://localhost:8000/health

# –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
curl -X POST "http://localhost:8000/predict" \
     -H "Content-Type: application/json" \
     -d '{
       "LIMIT_BAL": 50000,
       "SEX": 1,
       "EDUCATION": 2,
       "MARRIAGE": 1,
       "AGE": 35,
       "PAY_0": 0,
       "PAY_2": 0,
       "PAY_3": 0,
       "PAY_4": 0,
       "PAY_5": 0,
       "PAY_6": 0,
       "BILL_AMT1": 1000,
       "BILL_AMT2": 1000,
       "BILL_AMT3": 1000,
       "BILL_AMT4": 1000,
       "BILL_AMT5": 1000,
       "BILL_AMT6": 1000,
       "PAY_AMT1": 1000,
       "PAY_AMT2": 1000,
       "PAY_AMT3": 1000,
       "PAY_AMT4": 1000,
       "PAY_AMT5": 1000,
       "PAY_AMT6": 1000
     }'
–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥—Ä–∏—Ñ—Ç–∞
bash
python src/monitoring/drift_detection.py
üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
bash
# –í—Å–µ —Ç–µ—Å—Ç—ã
pytest tests/ -v

# –° –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
pytest tests/ -v --cov=src --cov-report=html

# –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–æ–¥—É–ª—å
pytest tests/test_models.py -v
–õ–∏–Ω—Ç–∏–Ω–≥ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞
flake8 src/ tests/

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
black src/ tests/

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
black --check src/ tests/
üîß CI/CD
–ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç GitHub Actions –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ:

–ó–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø—É—à–µ

–ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞ (flake8, black)

–í–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å Great Expectations

–°–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞

üìä –ú–æ–¥–µ–ª–∏ –∏ –º–µ—Ç—Ä–∏–∫–∏
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã
Logistic Regression

Random Forest

Gradient Boosting

–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
ROC-AUC

Precision, Recall, F1-Score

Accuracy

Feature Engineering
–ê–≥—Ä–µ–≥–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π

–ë–∏–Ω–Ω–∏–Ω–≥ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤

–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∏—Å–∫-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤

–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã

üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
Great Expectations –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∞–Ω–æ–º–∞–ª–∏–π

–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö

–î–µ—Ç–µ–∫—Ü–∏—è –¥—Ä–∏—Ñ—Ç–∞
Population Stability Index (PSI)

–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π

–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–ª—é—á–µ–≤—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤

üê≥ Docker
–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
bash
docker build -t credit-scoring-api .
–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
bash
docker run -p 8000:8000 credit-scoring-api
üìù –õ–∏—Ü–µ–Ω–∑–∏—è
–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö.
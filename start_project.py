#!/usr/bin/env python3
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
–†–∞–±–æ—Ç–∞–µ—Ç –≤: Windows Command Prompt, Git Bash, Linux Terminal, Mac Terminal
"""

import os
import sys
import subprocess
import platform
from pathlib import Path

def detect_environment():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É"""
    print("üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    is_windows = platform.system() == 'Windows'
    is_git_bash = 'MINGW' in platform.system() or 'Git' in os.environ.get('SHELL', '')
    
    print(f"–û–°: {platform.system()}")
    print(f"–¢–µ—Ä–º–∏–Ω–∞–ª: {'Git Bash' if is_git_bash else '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª'}")
    
    return is_windows, is_git_bash

def check_python():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Python"""
    try:
        result = subprocess.run([sys.executable, '--version'], 
                              capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Python: {result.stdout.strip()}")
            return True
    except:
        pass
    
    print("‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
    print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞: https://python.org")
    return False

def check_venv():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    in_venv = sys.prefix != sys.base_prefix
    if in_venv:
        print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
    else:
        print("‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
    return in_venv

def setup_environment():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("\nüîß –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    try:
        result = subprocess.run([sys.executable, 'setup_environment.py'], 
                              cwd=Path(__file__).parent)
        return result.returncode == 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        return False

def show_activation_instructions(is_windows, is_git_bash):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    project_dir = Path(__file__).parent
    
    print("\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –í–ê–®–ï–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø:")
    print("=" * 50)
    
    if is_git_bash:
        print("–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Git Bash (MINGW64)")
        print("")
        print("1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   source venv/Scripts/activate")
        print("")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:")
        print("   python run_project.py")
        print("")
        print("–ò–õ–ò –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π:")
        print("   source venv/Scripts/activate && python run_project.py")
        
    elif is_windows:
        print("–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Windows Command Prompt")
        print("")
        print("1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   venv\\Scripts\\activate")
        print("")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:")
        print("   python run_project.py")
        print("")
        print("–ò–õ–ò –∑–∞–ø—É—Å—Ç–∏—Ç–µ: activate_env.bat")
        
    else:  # Linux/Mac
        print("–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Linux/Mac Terminal")
        print("")
        print("1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   source venv/bin/activate")
        print("")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:")
        print("   python run_project.py")
        print("")
        print("–ò–õ–ò –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./activate_env.sh")
    
    print("")
    print("–î–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏: deactivate")

def main():
    print("üöÄ CREDIT SCORING PROJECT - –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö")
    print("=" * 60)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    is_windows, is_git_bash = detect_environment()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if not check_python():
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not check_venv():
        print("\nüîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        if setup_environment():
            print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            show_activation_instructions(is_windows, is_git_bash)
        else:
            print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: python setup_environment.py")
        
        return
    
    # –ï—Å–ª–∏ venv –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω - –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    print("\nüéØ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞...")
    try:
        subprocess.run([sys.executable, 'run_project.py'], 
                      cwd=Path(__file__).parent)
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–æ–µ–∫—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()